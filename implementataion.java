package DataStructureAndAlgorithm;

public class implementataion { 
	public static void main(String args[]) {
		 flodCycleLinked listssss=new  flodCycleLinked();
	/*	circularLinkedList listss = new circularLinkedList();
		doublyCircularLinked listsss=new doublyCircularLinked();
	doublyLinkedList lists = new doublyLinkedList();
		LinkedList list = new LinkedList();
		              list.insertAtBegning(2);
	                           	list.insertAtBegning(3);
		                           list.insertAtBegning(4);
		           list.insertAtBegning(5);
	     	list.display();
	                      System.out.println("");
   list.insertAtPosititon(1, 9);
list.display();
	         	System.out.println("");
                   		list.deleteAtPos(2);
	                                    	list.display();
		                                              System.out.println("");
	                  	list.update(2, 8);
	         	list.display();
	                          	System.out.println("");
	list.getIndex(2);
list.getIndex(3); 
		 System.out.println("");
	              	list.update(2,9);
                  		list.display();
	                        	System.out.println("");
		                                      list.deleteAtEnd();
		                                                      list.display();
		                                                            list.reverse();
		                                      System.out.println("");
		                              list.display();
		              lists.insertAtBegning(3);
	                         	lists.insertAtBegning(4);
	lists.insertAtBegning(5);
		 lists.insertAtBegning(6);
		   lists.insertAtPos(4,2); 
		        lists.insertAtPos(5,1); 
lists.deleteAtPos(0);
	lists.insertAtend(0);
lists.insertAtend(-1);
		 lists.deleteAtend(); 
		         lists.deleteAtend();
		                lists.update(0, 9);
		     lists.display();
		System.out.println(" ");
lists.displayrev(); 
System.out.println("");
lists.getindex(0);
		     lists.getindex(4);
		           lists.search(1);
	                	System.out.println(lists.contain(9));
		listss.insertAtBegninng(4);
		listss.insertAtBegninng(3);
		listss.insertAtBegninng(2);
		listss.insertAtBegninng(1);
		listss.insertAtend(5);
		listss.insertAtend(6);
		listss.deleteAtEnd();
		listss.display();
		System.out.println("");
		listss.deleteAtval(5); 
	   listss.inserAfter(3, 9);
		listss.inserAfter(4, 8);
		listss.inserAfter(8, 6);
		listss.display();
		listsss.insertAtBeg(4);
		listsss.insertAtBeg(3);
		listsss.insertAtBeg(2);
		listsss.insertAtBeg(1);
		listsss.insertAtBeg(0);
		listsss.insetAtEnd(5); 
        listsss.insetAtEnd(6);
        listsss.deleteAtbegning();
        listsss.deleteAtEnd();
		listsss.display();
        System.out.println("");
	    listsss.displayRev();
	     System.out.println("");
	   System.out.println( listsss.contain(7));
	   listsss.size();*/
		listssss.insertAtBegninng(5);
		listssss.insertAtBegninng(4);
		listssss.insertAtBegninng(3);
		listssss.insertAtBegninng(2);
		listssss.insertAtBegninng(1);
		//System.out.println(listssss.hasCycle());
		//System.out.println(listssss.returnStartingCycle());
		listssss.display();
		
		}
}
